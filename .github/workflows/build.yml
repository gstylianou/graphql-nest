name: Build workflow

# run-name: executed by ${{ github.actor }} 

on:
  workflow_dispatch:    
  push:
    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

jobs:

  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: graph-nestjs-app
  #     run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  build_docker_image:
    # needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.ACCESS_TOKEN }}
    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: ermis.azurecr.io
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          # ghcr.io/${{github.repository}}/graphql_nest:latest
          # ghcr.io/${{github.repository}}/graphql_nest:${{ github.sha }}
          ermis.azurecr.io/graphql_nest:latest
  
          

  deploy_to_container_apps:
    needs: build_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v2        
        with:
          # appSourcePath: ${{ github.workspace }} 
          acrName: ermis
          acrUsername: ${{ secrets.AZURE_CLIENT_ID }}
          acrPassword: ${{ secrets.AZURE_CLIENT_SECRET }}
          containerAppName: backend-graphql
          resourceGroup: frontend-react-rg
          containerAppEnvironment: frontend-react-env
          imageToDeploy: ermis.azurecr.io/graphql_nest:latest
          disableTelemetry: true    
          targetPort: 80        
          ingress: external
          location: westeurope
